{"ast":null,"code":"import React from\"react\";import{Navigate}from\"react-router-dom\";import{toast}from\"react-toastify\";import{jwtDecode}from'jwt-decode';import{jsx as _jsx}from\"react/jsx-runtime\";const isTokenExpired=token=>{if(!token)return true;try{const decodedToken=jwtDecode(token);const currentTime=Date.now()/1000;// Convert to seconds\nreturn decodedToken.exp!==undefined&&decodedToken.exp>currentTime;}catch(error){console.error('Error decoding token:',error);return true;}};const ProtectedRoute=_ref=>{let{element:Component,...rest}=_ref;const isAuthenticated=localStorage.getItem(\"access_token\")&&isTokenExpired(localStorage.getItem(\"access_token\"));localStorage.getItem(\"refresh_token\");// if (!isAuthenticated)  //  toast.error(\"Please login to access this page\");\nreturn isAuthenticated?/*#__PURE__*/_jsx(Component,{...rest}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","toast","jwtDecode","jsx","_jsx","isTokenExpired","token","decodedToken","currentTime","Date","now","exp","undefined","error","console","ProtectedRoute","_ref","element","Component","rest","isAuthenticated","localStorage","getItem","to"],"sources":["/var/www/production/portal/src/components/auth/ProtectedRoute.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {jwtDecode} from 'jwt-decode';\r\n\r\nconst isTokenExpired = (token) => {\r\n  if (!token) return true;\r\n\r\n  try {\r\n    const decodedToken = jwtDecode(token);\r\n    const currentTime = Date.now() / 1000; // Convert to seconds\r\n    return decodedToken.exp !== undefined && decodedToken.exp > currentTime;\r\n  } catch (error) {\r\n    console.error('Error decoding token:', error);\r\n    return true;\r\n  }\r\n};\r\n\r\nconst ProtectedRoute = ({ element: Component, ...rest }) => {\r\n  const isAuthenticated =\r\n    localStorage.getItem(\"access_token\") &&isTokenExpired(localStorage.getItem(\"access_token\") )\r\n    localStorage.getItem(\"refresh_token\");\r\n  // if (!isAuthenticated)  //  toast.error(\"Please login to access this page\");\r\n  \r\n  return isAuthenticated ? <Component {...rest} /> : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,KAAK,KAAQ,gBAAgB,CAEtC,OAAQC,SAAS,KAAO,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErC,KAAM,CAAAC,cAAc,CAAIC,KAAK,EAAK,CAChC,GAAI,CAACA,KAAK,CAAE,MAAO,KAAI,CAEvB,GAAI,CACF,KAAM,CAAAC,YAAY,CAAGL,SAAS,CAACI,KAAK,CAAC,CACrC,KAAM,CAAAE,WAAW,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CAAE;AACvC,MAAO,CAAAH,YAAY,CAACI,GAAG,GAAKC,SAAS,EAAIL,YAAY,CAACI,GAAG,CAAGH,WAAW,CACzE,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,MAAO,KAAI,CACb,CACF,CAAC,CAED,KAAM,CAAAE,cAAc,CAAGC,IAAA,EAAqC,IAApC,CAAEC,OAAO,CAAEC,SAAS,CAAE,GAAGC,IAAK,CAAC,CAAAH,IAAA,CACrD,KAAM,CAAAI,eAAe,CACnBC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,EAAGjB,cAAc,CAACgB,YAAY,CAACC,OAAO,CAAC,cAAc,CAAE,CAAC,CAC5FD,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CACvC;AAEA,MAAO,CAAAF,eAAe,cAAGhB,IAAA,CAACc,SAAS,KAAKC,IAAI,CAAG,CAAC,cAAGf,IAAA,CAACJ,QAAQ,EAACuB,EAAE,CAAC,QAAQ,CAAE,CAAC,CAC7E,CAAC,CAED,cAAe,CAAAR,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}