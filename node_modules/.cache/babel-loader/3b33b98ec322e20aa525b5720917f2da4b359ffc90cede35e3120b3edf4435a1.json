{"ast":null,"code":"import{createApi,fetchBaseQuery}from\"@reduxjs/toolkit/query/react\";import{baseUrl}from\"../utils/baseUrl\";const backendUrl=baseUrl.production;const AddressApi=createApi({reducerPath:\"addresses\",baseQuery:fetchBaseQuery({baseUrl:`${process.env.REACT_APP_BASE_URL}`,prepareHeaders:headers=>{const token=localStorage.getItem(\"access_token\");if(token){headers.set(\"Authorization\",`Bearer ${token}`);}return headers;}}),endpoints:builder=>({getAddress:builder.query({query:()=>`${backendUrl}/addresses`,providesTags:[\"addresses\"]}),addAddress:builder.mutation({query:body=>{const governorate=+body.governorate;const city=+body.city;return{url:\"/addresses\",method:\"POST\",body:{...body,governorate,city}};},invalidatesTags:[\"addresses\"]}),updateAddress:builder.mutation({query:_ref=>{let{id,body}=_ref;const governorate=+body.governorate;const city=+body.city;return{url:`${backendUrl}/addresses/${id}`,method:\"PUT\",body:{...body,governorate,city}};},invalidatesTags:[\"addresses\"]}),deleteAddress:builder.mutation({query:id=>({url:`${backendUrl}/addresses/${id}`,method:\"DELETE\"}),invalidatesTags:[\"addresses\"]})})});export const{useAddAddressMutation,useGetAddressQuery,useUpdateAddressMutation,useDeleteAddressMutation}=AddressApi;export default AddressApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","baseUrl","backendUrl","production","AddressApi","reducerPath","baseQuery","process","env","REACT_APP_BASE_URL","prepareHeaders","headers","token","localStorage","getItem","set","endpoints","builder","getAddress","query","providesTags","addAddress","mutation","body","governorate","city","url","method","invalidatesTags","updateAddress","_ref","id","deleteAddress","useAddAddressMutation","useGetAddressQuery","useUpdateAddressMutation","useDeleteAddressMutation"],"sources":["/var/www/production/portal/src/Redux/AddressApi.jsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport { baseUrl } from \"../utils/baseUrl\";\r\n\r\nconst backendUrl = baseUrl.production;\r\n\r\nconst AddressApi = createApi({\r\n  reducerPath: \"addresses\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: `${process.env.REACT_APP_BASE_URL}`,\r\n    prepareHeaders: (headers) => {\r\n      const token = localStorage.getItem(\"access_token\");\r\n      if (token) {\r\n        headers.set(\"Authorization\", `Bearer ${token}`);\r\n      }\r\n      return headers;\r\n    },\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getAddress: builder.query({\r\n      query: () => `${backendUrl}/addresses`,\r\n      providesTags: [\"addresses\"],\r\n    }),\r\n    addAddress: builder.mutation({\r\n      query: (body) => {\r\n        const governorate = +body.governorate;\r\n        const city = +body.city;\r\n        return {\r\n          url: \"/addresses\",\r\n          method: \"POST\",\r\n          body: { ...body, governorate, city },\r\n        };\r\n      },\r\n      invalidatesTags: [\"addresses\"],\r\n    }),\r\n\r\n    updateAddress: builder.mutation({\r\n      query: ({ id, body }) => {\r\n        const governorate = +body.governorate;\r\n        const city = +body.city;\r\n        return {\r\n          url: `${backendUrl}/addresses/${id}`,\r\n          method: \"PUT\",\r\n          body: { ...body, governorate, city },\r\n        };\r\n      },\r\n      invalidatesTags: [\"addresses\"],\r\n    }),\r\n    deleteAddress: builder.mutation({\r\n      query: (id) => ({\r\n        url: `${backendUrl}/addresses/${id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"addresses\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useAddAddressMutation,\r\n  useGetAddressQuery,\r\n  useUpdateAddressMutation,\r\n  useDeleteAddressMutation,\r\n} = AddressApi;\r\n\r\nexport default AddressApi;\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,cAAc,KAAQ,8BAA8B,CACxE,OAASC,OAAO,KAAQ,kBAAkB,CAE1C,KAAM,CAAAC,UAAU,CAAGD,OAAO,CAACE,UAAU,CAErC,KAAM,CAAAC,UAAU,CAAGL,SAAS,CAAC,CAC3BM,WAAW,CAAE,WAAW,CACxBC,SAAS,CAAEN,cAAc,CAAC,CACxBC,OAAO,CAAE,GAAGM,OAAO,CAACC,GAAG,CAACC,kBAAkB,EAAE,CAC5CC,cAAc,CAAGC,OAAO,EAAK,CAC3B,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAClD,GAAIF,KAAK,CAAE,CACTD,OAAO,CAACI,GAAG,CAAC,eAAe,CAAE,UAAUH,KAAK,EAAE,CAAC,CACjD,CACA,MAAO,CAAAD,OAAO,CAChB,CACF,CAAC,CAAC,CACFK,SAAS,CAAGC,OAAO,GAAM,CACvBC,UAAU,CAAED,OAAO,CAACE,KAAK,CAAC,CACxBA,KAAK,CAAEA,CAAA,GAAM,GAAGjB,UAAU,YAAY,CACtCkB,YAAY,CAAE,CAAC,WAAW,CAC5B,CAAC,CAAC,CACFC,UAAU,CAAEJ,OAAO,CAACK,QAAQ,CAAC,CAC3BH,KAAK,CAAGI,IAAI,EAAK,CACf,KAAM,CAAAC,WAAW,CAAG,CAACD,IAAI,CAACC,WAAW,CACrC,KAAM,CAAAC,IAAI,CAAG,CAACF,IAAI,CAACE,IAAI,CACvB,MAAO,CACLC,GAAG,CAAE,YAAY,CACjBC,MAAM,CAAE,MAAM,CACdJ,IAAI,CAAE,CAAE,GAAGA,IAAI,CAAEC,WAAW,CAAEC,IAAK,CACrC,CAAC,CACH,CAAC,CACDG,eAAe,CAAE,CAAC,WAAW,CAC/B,CAAC,CAAC,CAEFC,aAAa,CAAEZ,OAAO,CAACK,QAAQ,CAAC,CAC9BH,KAAK,CAAEW,IAAA,EAAkB,IAAjB,CAAEC,EAAE,CAAER,IAAK,CAAC,CAAAO,IAAA,CAClB,KAAM,CAAAN,WAAW,CAAG,CAACD,IAAI,CAACC,WAAW,CACrC,KAAM,CAAAC,IAAI,CAAG,CAACF,IAAI,CAACE,IAAI,CACvB,MAAO,CACLC,GAAG,CAAE,GAAGxB,UAAU,cAAc6B,EAAE,EAAE,CACpCJ,MAAM,CAAE,KAAK,CACbJ,IAAI,CAAE,CAAE,GAAGA,IAAI,CAAEC,WAAW,CAAEC,IAAK,CACrC,CAAC,CACH,CAAC,CACDG,eAAe,CAAE,CAAC,WAAW,CAC/B,CAAC,CAAC,CACFI,aAAa,CAAEf,OAAO,CAACK,QAAQ,CAAC,CAC9BH,KAAK,CAAGY,EAAE,GAAM,CACdL,GAAG,CAAE,GAAGxB,UAAU,cAAc6B,EAAE,EAAE,CACpCJ,MAAM,CAAE,QACV,CAAC,CAAC,CACFC,eAAe,CAAE,CAAC,WAAW,CAC/B,CAAC,CACH,CAAC,CACH,CAAC,CAAC,CAEF,MAAO,MAAM,CACXK,qBAAqB,CACrBC,kBAAkB,CAClBC,wBAAwB,CACxBC,wBACF,CAAC,CAAGhC,UAAU,CAEd,cAAe,CAAAA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}