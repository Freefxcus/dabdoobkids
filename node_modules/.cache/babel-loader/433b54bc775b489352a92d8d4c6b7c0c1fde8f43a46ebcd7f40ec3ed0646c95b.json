{"ast":null,"code":"import*as yup from\"yup\";export const addressSchema=yup.object().shape({phone_number:yup.string().min(11,\"Phone must be at least 11 characters long\").required(\"Required\"),first_name:yup.string().min(2,\"Phone must be at least 2 characters long\").required(\"Required\"),last_name:yup.string().min(2,\"Phone must be at least 2 characters long\").required(\"Required\"),address:yup.string().min(3,\"Must be at least 3 characters long\").required(\"Required\"),primary:yup.boolean().required(\"Required\"),type:yup.string().required(\"Required\"),governorate:yup.number().required(\"Required\"),city:yup.number().required(\"Required\")// district: yup\n//   .string()\n//   .min(3, \"Must be at least 3 characters long\")\n//   .required(\"Required\"),\n// postalCode: yup\n//   .string()\n//   .min(3, \"Must be at least 3 characters long\")\n//   .required(\"Required\"),\n});export const addressSchemaInitialValues={phone_number:\"\",first_name:\"\",last_name:\"\",type:\"\",primary:\"\",address:\"\",governorate:\"\",city:\"\",// district: \"\",\npostalCode:\"\"};","map":{"version":3,"names":["yup","addressSchema","object","shape","phone_number","string","min","required","first_name","last_name","address","primary","boolean","type","governorate","number","city","addressSchemaInitialValues","postalCode"],"sources":["/var/www/production/portal/src/utils/schemas/addressSchema.js"],"sourcesContent":["import * as yup from \"yup\";\r\n\r\nexport const addressSchema = yup.object().shape({\r\n  phone_number: yup\r\n    .string()\r\n    .min(11, \"Phone must be at least 11 characters long\")\r\n    .required(\"Required\"),\r\n  first_name: yup\r\n    .string()\r\n    .min(2, \"Phone must be at least 2 characters long\")\r\n    .required(\"Required\"),\r\n  last_name: yup\r\n    .string()\r\n    .min(2, \"Phone must be at least 2 characters long\")\r\n    .required(\"Required\"),\r\n\r\n  address: yup\r\n    .string()\r\n    .min(3, \"Must be at least 3 characters long\")\r\n    .required(\"Required\"),\r\n\r\n  primary: yup.boolean().required(\"Required\"),\r\n  type: yup.string().required(\"Required\"),\r\n  governorate: yup\r\n    .number()\r\n    .required(\"Required\"),\r\n  city: yup\r\n    .number().required(\"Required\"),\r\n  // district: yup\r\n  //   .string()\r\n  //   .min(3, \"Must be at least 3 characters long\")\r\n  //   .required(\"Required\"),\r\n  // postalCode: yup\r\n  //   .string()\r\n  //   .min(3, \"Must be at least 3 characters long\")\r\n  //   .required(\"Required\"),\r\n});\r\n\r\nexport const addressSchemaInitialValues = {\r\n  phone_number: \"\",\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n  type: \"\",\r\n  primary: \"\",\r\n  address: \"\",\r\n  governorate: \"\",\r\n  city: \"\",\r\n  // district: \"\",\r\n  postalCode: \"\",\r\n};\r\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,GAAG,KAAM,KAAK,CAE1B,MAAO,MAAM,CAAAC,aAAa,CAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC,CAC9CC,YAAY,CAAEJ,GAAG,CACdK,MAAM,CAAC,CAAC,CACRC,GAAG,CAAC,EAAE,CAAE,2CAA2C,CAAC,CACpDC,QAAQ,CAAC,UAAU,CAAC,CACvBC,UAAU,CAAER,GAAG,CACZK,MAAM,CAAC,CAAC,CACRC,GAAG,CAAC,CAAC,CAAE,0CAA0C,CAAC,CAClDC,QAAQ,CAAC,UAAU,CAAC,CACvBE,SAAS,CAAET,GAAG,CACXK,MAAM,CAAC,CAAC,CACRC,GAAG,CAAC,CAAC,CAAE,0CAA0C,CAAC,CAClDC,QAAQ,CAAC,UAAU,CAAC,CAEvBG,OAAO,CAAEV,GAAG,CACTK,MAAM,CAAC,CAAC,CACRC,GAAG,CAAC,CAAC,CAAE,oCAAoC,CAAC,CAC5CC,QAAQ,CAAC,UAAU,CAAC,CAEvBI,OAAO,CAAEX,GAAG,CAACY,OAAO,CAAC,CAAC,CAACL,QAAQ,CAAC,UAAU,CAAC,CAC3CM,IAAI,CAAEb,GAAG,CAACK,MAAM,CAAC,CAAC,CAACE,QAAQ,CAAC,UAAU,CAAC,CACvCO,WAAW,CAAEd,GAAG,CACbe,MAAM,CAAC,CAAC,CACRR,QAAQ,CAAC,UAAU,CAAC,CACvBS,IAAI,CAAEhB,GAAG,CACNe,MAAM,CAAC,CAAC,CAACR,QAAQ,CAAC,UAAU,CAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAU,0BAA0B,CAAG,CACxCb,YAAY,CAAE,EAAE,CAChBI,UAAU,CAAE,EAAE,CACdC,SAAS,CAAE,EAAE,CACbI,IAAI,CAAE,EAAE,CACRF,OAAO,CAAE,EAAE,CACXD,OAAO,CAAE,EAAE,CACXI,WAAW,CAAE,EAAE,CACfE,IAAI,CAAE,EAAE,CACR;AACAE,UAAU,CAAE,EACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}